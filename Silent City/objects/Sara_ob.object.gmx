<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>closeidle_sp</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///변수 설정

Rspeed = 4;
Lspeed = 4;
Jspeed = 11;
Gspeed = 1;
//속도 설정(이 값들로 간단하게 속도 등 설정가능)

key_check = 0;
//1일경우 오른쪽 중복입력, 2일경우 왼쪽 중복입력

xdir = 1;
//1일경우 오른쪽 방향, 2일경우 왼쪽 방향

move_check = 0;
jump_check = 0;
um_check = 0;
glide_check = 0;
//각종 체크용 변수(0 또는 1)

image_speed = 0.1;
//기본 이미지 스피드
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///애니메이션 및 중력 및 이동

if(place_free(x, y + 1) and um_check == 0)
    {
        gravity_direction = 270;
        gravity = Gspeed;
        jump_check = 1;
    }
else if(place_free(x, y + 1) and um_check == 1)
    {
        if(vspeed &lt; 0)
            {
                gravity_direction = 270;
                gravity = Gspeed;
                jump_check = 1;
            }
        else
            {  
                gravity_direction = 270;
                gravity = 0.05;
                jump_check = 1;
            }
    }
else if(not place_free(x, y + 1))
    {
        gravity_direction = 270;
        gravity = 0;
        jump_check = 0;
        glide_check = 0;
    }
//중력 설정(밑에 무언가가 없으면 중력 적용)

if(not place_free(x - 4, y))
    {
        x = x + 4;
    }
if(not place_free(x + 4, y))
    {
        x = x - 4;
    }
//좌우 이동 제한
    
if (jump_check == 0)
    {
    if (move_check == 1)
        {
                if(xdir == 1)
                    {
                        if(um_check == 0)
                            {
                                image_speed = 0.4;
                                sprite_index = closewalk_sp;
                            }
                        else if(um_check == 1)
                            {
                                image_speed = 0.4;
                                sprite_index = openwalk_sp;
                            }
                    }
                else if(xdir == -1)
                    {
                        if(um_check == 0)
                            {
                                image_speed = 0.4;
                                sprite_index = closewalk_left_sp;
                            }
                        else if(um_check == 1)
                            {
                                image_speed = 0.4;
                                sprite_index = openwalk_left_sp;
                            }
                    }
                    
        }
    else if(move_check == 0)
        {
            if(xdir == 1)
                {
                    if(um_check == 0)
                        {
                            image_speed = 0.1;
                            sprite_index = closeidle_sp;
                        }
                    else if(um_check == 1)
                        {
                            image_speed = 0.1;
                            sprite_index = openidle_sp;
                        }
                }
            else if(xdir == -1)
                {
                        if(um_check == 0)
                            {
                                image_speed = 0.1;
                                sprite_index = closeidle_left_sp;
                            }
                        else if(um_check == 1)
                            {
                                image_speed = 0.1;
                                sprite_index = openidle_left_sp;
                            }
                }
        }
}
else if(jump_check == 1)
    {
        if(glide_check == 0)
            {
                if(xdir == 1)
                    {
                        if(um_check == 0)
                            {
                                image_speed = 0.1;
                                sprite_index = closejump_sp;
                            }
                        else if(um_check == 1)
                            {
                                image_speed = 0.1;
                                sprite_index = openjump_sp;
                            }
                    }
                else if(xdir == -1)
                    {
                        if(um_check == 0)
                            {
                                image_speed = 0.1;
                                sprite_index = closejump_left_sp;
                            }
                        else if(um_check == 1)
                            {
                                image_speed = 0.1;
                                sprite_index = openjump_left_sp;
                            }
                    }
            }
        if(glide_check == 1)
            {
                if(xdir == 1)
                    {
                        image_speed = 0.3;
                        sprite_index = glide_sp;
                    }
                else if(xdir == -1)
                    {
                        image_speed = 0.3;
                        sprite_index = glide_left_sp;
                    }
            }
    }
//애니메이션 - 체크용 변수들을 활용해 하나하나 지정함
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="room_wall_ob">
      <action>
        <libid>1</libid>
        <id>222</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_next_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="normal_wall_ob">
      <action>
        <libid>1</libid>
        <id>116</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move_contact</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>direction</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>8</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>104</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_vspeed</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///오른쪽 이동(키보드 누름)

if(move_check == 1 and xdir == -1 and key_check == 0)
    {
        hspeed = Rspeed;
        move_check = 1;
        xdir = 1;
        key_check = 1;
    }
else if(move_check == 0 and key_check == 0)
    {
        hspeed = Rspeed;
        move_check = 1;
        xdir = 1;
    }
//좌우좌-우좌우 등 중복 입력을 대비해 변수를 확인받아 이동
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///왼쪽 이동(키보드 누름)

if(move_check == 1 and xdir == 1 and key_check == 0)
    {
        move_check = 1;
        xdir = -1;
        hspeed = -Lspeed;
        key_check = 2;
    }
else if(move_check == 0 and key_check == 0)
    {
        hspeed = -Lspeed;
        move_check = 1;
        xdir = -1;
    }
//좌우좌-우좌우 등 중복 입력을 대비해 변수를 확인받아 이동
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///점프

if(jump_check == 0)
    {
        if(not place_free(x, y + 1))
            {
                    vspeed = -Jspeed;
                    audio_play_sound(jump_snd,1,0);
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///우산 펼치기

if(um_check == 0)
    {
        um_check = 1;
    }
else if(um_check == 1)
    {
        um_check = 0;
    }
//토글 함수로 작동(점프시에는 우산 못핌)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///오른쪽 이동(키보드 릴리즈)

if(move_check == 1 and xdir == 1 and key_check == 0)
    {
        hspeed = 0;
        move_check = 0;
        xdir = 1;
    }
else if(move_check == 1 and xdir == -1 and key_check == 2)
    {
        key_check = 0;
    }
else if(move_check == 1 and xdir == 1 and key_check == 1)
    {
     move_check = 1;
     xdir = -1;
     hspeed = -Lspeed;
     key_check = 0;
     }
//키보드 누름과 마찬가지로 키보드 중복입력 변수를 확인
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///왼쪽 이동(키보드 릴리즈)

if(move_check == 1 and xdir == -1 and key_check == 0)
    {
        hspeed = 0;
        move_check = 0;
        xdir = -1;
    }
else if(move_check == 1 and xdir == 1 and key_check == 1)
    {
        key_check = 0;
    }
else if(move_check == 1 and xdir == -1 and key_check == 2)
    {
        move_check = 1;
        xdir = 1;
        hspeed = Rspeed;
        key_check = 0;
    }
//키보드 누름과 마찬가지로 키보드 중복입력 변수를 확인
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
